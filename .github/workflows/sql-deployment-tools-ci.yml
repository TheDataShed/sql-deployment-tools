name: SQL Deployment Tools CI

concurrency:
  group: continuous-integration

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize]
  workflow_dispatch:
    branches:
      - '!main'

jobs:
  pre_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - name: Run Pre-Commit
        run: |
          python -m pip install --requirement ./requirements/test.txt
          pre-commit run --all-files

  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: ./requirements/*.txt
      - run: pip install -r ./requirements/build.txt
      - run: pip install -r ./requirements/test.txt

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - name: Run Tests
        run: |
          sh ./test/run_tests.sh

      - name: Validate Test Results
        run: |
          sh ./test/validate_results.sh

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        id: test-results
        if: always()
        with:
          files: "test-results/**/*.xml"

      - name: Set Badge Colour
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Unit Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for main branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/GooseLF/dabe49eaf9102b6392e3845b2048d664
          file: badge.svg

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - name: Build Executable (Debian)
        run: |
          echo "Validating Debian Build"
          sh ./platform/linux_debian/build.sh

  bump-version:
    if: >
      !startsWith(github.event.head_commit.message, 'bump:') &&
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [pre_commit, test, build]
    name: "Commitizen: Bump version and create changelog"
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.COMMITIZEN }}"
          fetch-depth: 0
      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.COMMITIZEN }}
